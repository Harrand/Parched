shader(type = fragment);

import <math>

input(id = 0) vec3 colour;
input(id = 1) vec2 centre;
input(id = 2) float scale;
input(id = 3) vec2 position_clipspace;
output(id = 0) vec4 out_colour;

resource(id = 1) buffer Meta
{
	float aspect_ratio;
} metadata;

void main()
{
	vec2 disp = (position_clipspace - centre);
	disp.x *= metadata.aspect_ratio;
	float dist = tz::math::magnitude(disp);
	if(dist >= scale.x)
	{
		discard;
	}
	out_colour = vec4(colour, 1.0);
}
